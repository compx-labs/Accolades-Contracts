{
  "hints": {
    "createApplication(any[])void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "registerAccolade(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInToApplication(any[])void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "claimAccolade(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "retrieveAccolade(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "claimedAccolades": {
          "type": "bytes",
          "key": "claimedAccolades"
        },
        "numClaimedAccolades": {
          "type": "uint64",
          "key": "numClaimedAccolades"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "registeredAccolades": {
          "type": "uint64",
          "key": "registeredAccolades"
        },
        "accolades": {
          "type": "bytes",
          "key": "accolades"
        },
        "adminAddress": {
          "type": "bytes",
          "key": "adminAddress"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 1,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "AccoladesVault",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "args",
            "type": "any[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "registerAccolade",
        "args": [
          {
            "name": "assetId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToApplication",
        "args": [
          {
            "name": "args",
            "type": "any[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claimAccolade",
        "args": [
          {
            "name": "assetId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "retrieveAccolade",
        "args": [
          {
            "name": "assetId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}